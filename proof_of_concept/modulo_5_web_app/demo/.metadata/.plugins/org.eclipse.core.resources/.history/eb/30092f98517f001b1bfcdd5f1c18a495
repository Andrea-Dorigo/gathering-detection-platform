<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
    <title>Leaflet.heat demo</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"></script>
    <script src="leaflet-heat.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <style>
        #map { width: 800px; height: 600px; }
        body { font: 16px/1.4 "Helvetica Neue", Arial, sans-serif; }
        .ghbtns { position: relative; top: 4px; margin-left: 5px; }
        a { color: #0077ff; }
    </style>
</head>
<body>


<div id="map"></div>

<form id="CoordinateForm" name ="CoordinateForm" action = "/demo/coordinate" method = "POST">
<input type="button" value="Ajax Request" onclick="start()">
</form>




<script>

/**
* Generates number of random geolocation points given a center and a radius.
* @param  {Object} center A JS object with lat and lng attributes.
* @param  {number} radius Radius in meters.
* @param {number} count Number of points to generate.
* @return {array} Array of Objects with lat and lng attributes.
*/
function generateRandomPoints(center, radius, count) {
  var points = [];
  for (var i=0; i<count; i++) {
    points.push(generateRandomPoint(center, radius));
  }
  return points;
}


/**
* Generates number of random geolocation points given a center and a radius.
* Reference URL: http://goo.gl/KWcPE.
* @param  {Object} center A JS object with lat and lng attributes.
* @param  {number} radius Radius in meters.
* @return {Object} The generated random points as JS object with lat and lng attributes.
*/
function generateRandomPoint(center, radius) {
  var x0 = center.lng;
  var y0 = center.lat;
  // Convert Radius from meters to degrees.
  var rd = radius/111300;

  var u = Math.random();
  var v = Math.random();

  var w = rd * Math.sqrt(u);
  var t = 2 * Math.PI * v;
  var x = w * Math.cos(t);
  var y = w * Math.sin(t);

  var xp = x/Math.cos(y0);

  // Resulting point.
  return {'lat': y+y0, 'lng': xp+x0};
}

function loadMap(data){
	
	var map = L.map('map').setView([41.9005213979, 12.4765647604], 12);

	var tiles = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
	    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',
	}).addTo(map);
	
	var dataToString = JSON.stringify(data);
	var datatext = '{"webcam":' + dataToString + '}';
	
	console.log(datatext);
	
	var test = JSON.parse(datatext);
	console.log(test.webcam[2].lat);
	//var randomGeoPointsPiazzaSpagna = generateRandomPoints({test.lat[] , test.lon }, 8, 300); //piazza spagna
	var randomGeoPointsPiazzaNavona = generateRandomPoints({'lat':41.899139 , 'lng':12.473311}, 10, 30); //piazza navona

	var heat = L.heatLayer(randomGeoPointsPiazzaNavona).addTo(map);
	//var heat = L.heatLayer(randomGeoPointsPiazzaSpagna).addTo(map);


	var marker = L.marker([41.905697, 12.482327], {	        elevation: 260.0,
	        title: "Piazza di Spagna"
	}).addTo(map);

	marker.bindPopup("Piazza di Spagna: 300 persone ca.").openPopup();

	var marker = L.marker([41.899139 , 12.473311], {
	        elevation: 260.0,
	        title: "Piazza Navona"
	}).addTo(map);

	marker.bindPopup("Piazza di Navona: 500 persone ca.").openPopup();
	
}

//points = points.map(function (p) { return [p[0], p[1]]; });





function start() {
	var methodurl = "/coordinate";
	$.ajax({
		type: 'GET',
	    url: methodurl,
	    dataType: 'json', 
	    success: function(data) {
	        console.log(data);
	        alert(data);
	        loadMap(data);
	    }
	});
}



// Usage Example.
// Generates 100 points that is in a 1km radius from the given lat and lng point.




</script>

</body>
</html>
